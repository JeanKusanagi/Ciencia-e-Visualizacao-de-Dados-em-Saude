# -*- coding: utf-8 -*-
"""L1 - MédiaCorrelacao_Jean.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LbnkKGSXRfRcXgU00aLhlO-lEeAAqSE0

Jean Antonio Ribeiro<br>
RA: 265739

<strong>a) qual foi a ferramenta/linguagem escolhida?</strong>

As ferramentas utilizadas foram Python/Pandas/Numpy. Essas ferramentas de fáácil manutenção.


<strong>b) breve relato do seu processo de instalação/familiarização com a nova ferramenta, incluindo dicas para quem vai usá-la pela primeira vez;</strong>

Via Notebook não há necessidade de instalar as ferramentas, apenas importar as bibliotecas necessárias. Em uma máquina local, faça as instalação das bibliotecas necessária com auxilio da ferramenta pip: 

sudo apt-get install python-pip<br>
sudo pip install numpy<br>
sudo pip install pandas


<strong>c) descrição detalhada da análise realizada, incluindo ilustrações e código se julgar necessário;</strong>

Ver subtópico Média.


<strong>d) sua conclusão após a realização da análise, revisitando a última pergunta da parte 1: os quatro conjuntos de dados correspondem ao mesmo fenômeno?</strong>

Com a linguagem de programação Python e sua bibliotecas, a manipulação de variáveis e calculo dos resultados é facilmente encontrado, tornando uma ótima ferramenta para pessoas iniciantes na área. O objetivo do estudo da correlação é determinar o grau de relacionamento entre duas variáveis ou colunas. Caso os pontos das variáveis, representados num plano cartesiano (X, Y) ou gráfico de dispersão, apresentem uma dispersão ao longo de uma reta imaginária, dizemos que os dados apresentam uma correlação linear. Por sua vez, a média calcula valores de um único conjunto de valores, sem relação com outro conjunto de valores. Como os valores são próximos e possuem uma correlação positiva forte entre elas, percebe-se os quatro conjuntos de valores podem representar o mesmo fenômeno. A análise é do tipo amostral.

A Correlação entre duas variáveis de tipo quantitativo descreve a associação entre essas variáveis. O Coeficiciente de correlação amostral de Pearson, representado por r, é uma medida da direção e grau com que duas variáveis, de tipo quantitativo, se associam linearmente. O valor do coeficiente de correlação assume valores entre -1 e 1 e quanto maior for o valor de r, em módulo, maior será o grau de associação linear entre as variáveis. 

O Coeficiente de correlação populacional de Pearson, ρ, entre duas variáveis aleatórias X e Y, com desvio padrão diferente de zero, mede a direção e o grau com que as variáveis se associam linearmente. O valor de coeficiente de correlação populacional assume valores no intervalo [-1,1].
"""

# http://artedosdados.blogspot.com/2015/01/matriz-de-correlacao-em-python.html
# https://felipegalvao.com.br/pt/blog/descriptive-statistics-with-python/

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline
import statsmodels.api as sm
import statsmodels.formula.api as smf
from sklearn import metrics
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.metrics import roc_auc_score, roc_curve, classification_report, accuracy_score, confusion_matrix, auc, precision_recall_curve, precision_score, recall_score, f1_score
from google.colab import drive

drive.mount('/content/drive')

df = pd.read_csv("/content/drive/My Drive/DataSet/bemocsna.csv")
df.head()

baseline_df = df[['x1', 'y1']].dropna()
baseline_df.head()

"""<strong>3. Com base nas estatísticas descritivas de média e correlação das variáveis, você diria que os quatro conjuntos de valores representam o mesmo fenômeno?</strong>

Sim, já que os valores são próximos e possuem uma correlação positiva forte entre as variáveis, percebe-se os conjuntos de valores podem representar o mesmo fenômeno.

O objetivo do estudo da correlação é determinar o grau de relacionamento entre duas variáveis ou colunas. Caso os pontos das variáveis, representados num plano cartesiano (X, Y) ou gráfico de dispersão, apresentem uma dispersão ao longo de uma reta imaginária, dizemos que os dados apresentam uma correlação linear. Por sua vez, a média calcula valores de um único conjunto de valores, sem relação com outro conjunto de valores. 
"""

corr = df.corr()

# Generate a mask for the upper triangle
mask = np.zeros_like(corr, dtype=np.bool)
mask[np.triu_indices_from(mask)] = True

# Set up the matplotlib figure
f, ax = plt.subplots(figsize=(30, 15))

# Generate a custom diverging colormap
cmap = sns.diverging_palette(220, 10, as_cmap=True)

# Draw the heatmap with the mask and correct aspect ratio
sns.heatmap(corr, mask=mask, cmap=cmap, center=0,annot=True, square=True, linewidths=.5, cbar_kws={"shrink": .5});

import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(25, 10))

sns.heatmap(baseline_df.corr(), annot = True, fmt = '.2f', cmap='Blues')
plt.title('Correlação entre variáveis do dataset de bemocsna.csv')
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(25, 10))

sns.heatmap(df.corr(), annot = True, fmt = '.2f', cmap='Blues')
plt.title('Correlação entre variáveis do dataset de bemocsna.csv')
plt.show()

#Calculo das correlacoes dos retornos e criação dos gráficos. 
# quanto mais clara a cor, mais forte é a correlação entre os retornos de cada ativo 
rets3 = df[:].pct_change()
corr = rets3.corr()
plt.figure(figsize=(10, 10))
plt.title('Correlação: quanto mais clara a cor, mais forte é a correlação entre os retornos de cada ativo ')
plt.imshow(corr, cmap='hot', interpolation='none')  
plt.colorbar()  
plt.xticks(range(len(corr)), corr.columns)  
plt.yticks(range(len(corr)), corr.columns);  
plt.savefig("correl.png")  
plt.show()

"""# Correlação"""

print(df.corr())

"""# Covariância"""

print(df.cov())

"""# Média"""

print(df['x1'].mean(), df['x2'].mean(), df['x3'].mean(), df['x4'].mean())
print(df['y1'].mean(), df['y2'].mean(), df['y3'].mean(), df['y4'].mean())

print("%.3f, %.3f, %.3f, %.3f" % (df['x1'].mean(),df['x2'].mean(),df['x3'].mean(),df['x4'].mean()))
print("%.3f, %.3f, %.3f, %.3f" % (df['y1'].mean(),df['y2'].mean(),df['y3'].mean(),df['y4'].mean()))

"""# Mediana e Quantil"""

print(df['x1'].median(), df['x2'].median(), df['x3'].median(), df['x4'].median())
print(df['y1'].median(), df['y2'].median(), df['y3'].median(), df['y4'].median())

print(df['x1'].quantile(q=0.25), df['x2'].quantile(q=0.25), df['x3'].quantile(q=0.25), df['x4'].quantile(q=0.25))
print(df['y1'].quantile(q=0.25), df['y2'].quantile(q=0.25), df['y3'].quantile(q=0.25), df['y4'].quantile(q=0.25))

"""# Moda"""

print(df['x1'].mode(), df['x2'].mode(), df['x3'].mode(), df['x4'].mode())
print(df['y1'].mode(), df['y2'].mode(), df['y3'].mode(), df['y4'].mode())

"""# Variância"""

print(df['x1'].var(), df['x2'].var(), df['x3'].var(), df['x4'].var())
print(df['y1'].var(), df['y2'].var(), df['y3'].var(), df['y4'].var())

print("%.3f, %.3f, %.3f, %.3f" % (df['x1'].var(),df['x2'].var(),df['x3'].var(),df['x4'].var()))
print("%.3f, %.3f, %.3f, %.3f" % (df['y1'].var(),df['y2'].var(),df['y3'].var(),df['y4'].var()))

"""# Desvio Padrão"""

print(df['x1'].std(), df['x2'].std(), df['x3'].std(), df['x4'].std())
print(df['y1'].std(), df['y2'].std(), df['y3'].std(), df['y4'].std())

print("%.3f, %.3f, %.3f, %.3f" % (df['x1'].std(),df['x2'].std(),df['x3'].std(),df['x4'].std()))
print("%.3f, %.3f, %.3f, %.3f" % (df['y1'].std(),df['y2'].std(),df['y3'].std(),df['y4'].std()))